/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-02-18 05:26:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ajax2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"resources/js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function() { //dom(document object model) tree)\r\n");
      out.write("	//body dom tree로 ram에 읽어들인 후, \r\n");
      out.write("	//function을 실행하라. 익명함수 \r\n");
      out.write("	//var a = 100\r\n");
      out.write("	//let a = 100\r\n");
      out.write("	//table-tr-td\r\n");
      out.write("	//   body -- 주소 :  table : 주소-- tr  \r\n");
      out.write("	$('#b1').click(function() {\r\n");
      out.write("		//JSON(JavaScript Object Notaion, 제이슨 {}를 사용)\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"movie\",\r\n");
      out.write("			data: {\r\n");
      out.write("				title : $('#title').val(),\r\n");
      out.write("				price : $('#price').val()\r\n");
      out.write("			},\r\n");
      out.write("			success: function(result) {\r\n");
      out.write("				alert(result)\r\n");
      out.write("				$('#d2').html(result)\r\n");
      out.write("			},\r\n");
      out.write("			error: function() {\r\n");
      out.write("				alert('ajax 실패.@@')\r\n");
      out.write("			}\r\n");
      out.write("		})//ajax\r\n");
      out.write("	})//b1\r\n");
      out.write("	$('#b2').click(function() {\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"reply\",\r\n");
      out.write("			data: {\r\n");
      out.write("				reply : $('#reply').val()\r\n");
      out.write("			},\r\n");
      out.write("			success: function(result) {\r\n");
      out.write("				alert(result)\r\n");
      out.write("				$('#d1').append(\"<img src='resources/img/smiley.png' style=height='100px', width='100px' >\")\r\n");
      out.write("				$('#d1').append(result + \"<br>\")\r\n");
      out.write("			},\r\n");
      out.write("			error: function() {\r\n");
      out.write("				alert('ajax 실패.@@')\r\n");
      out.write("			}\r\n");
      out.write("		})//ajax\r\n");
      out.write("	})//b3\r\n");
      out.write("	$('#b3').click(function() {\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"reply\",\r\n");
      out.write("			data: {\r\n");
      out.write("				user : $('#reply').val()\r\n");
      out.write("			},\r\n");
      out.write("			success: function(result) {\r\n");
      out.write("				alert(result)\r\n");
      out.write("				$('#d2').html(result)\r\n");
      out.write("			},\r\n");
      out.write("			error: function() {\r\n");
      out.write("				alert('ajax 실패.@@')\r\n");
      out.write("			}\r\n");
      out.write("		})//ajax\r\n");
      out.write("	})//b3\r\n");
      out.write("})//$\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	영화제목: <input type=\"text\" name=\"title\" id=\"title\"><br>\r\n");
      out.write("	영화관람료: <input type=\"text\" name=\"price\" id=\"price\"><br>\r\n");
      out.write("	<button id=\"b1\">영화 정보 제출</button>\r\n");
      out.write("<hr>\r\n");
      out.write("	댓글 : <input type=\"text\" name=\"reply\" id=\"reply\"><br>\r\n");
      out.write("	<button id=\"b2\">댓글 달기</button>\r\n");
      out.write("<hr color=\"blue\">\r\n");
      out.write("<div id=\"d1\"></div>\r\n");
      out.write("<hr>\r\n");
      out.write("	가입할 id: <input type=\"text\" name=\"user\" id=\"user\"><br>\r\n");
      out.write("	<button id=\"b3\">아이디 중복 체크</button>\r\n");
      out.write("<hr color=\"blue\">\r\n");
      out.write("<div id=\"d2\"></div>	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
